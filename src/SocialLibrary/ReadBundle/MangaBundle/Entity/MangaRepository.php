<?php

namespace SocialLibrary\ReadBundle\MangaBundle\Entity;

use Application\Sonata\UserBundle\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * MangaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MangaRepository extends EntityRepository
{
    public function findAllPaginated($paginator, $page, User $user = null)
    {
        $query = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select(array('m', 's', 'c', 'o'))
            ->from('SocialLibraryReadBundleMangaBundle:Manga', 'm')
            ->innerJoin('m.serie', 's')
            ->innerJoin('m.creators', 'c')
            ->leftJoin('m.owners', 'o')
            ->orderBy('m.volume');
        
        if($user != null) {
            $query = $query
                ->where('o.usernameCanonical = :username')
                ->setParameter('username', $user->getUsernameCanonical());
        }
        
        try {
            return $paginator->paginate($query, $page);
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    public function findManga($id, $nameSlug)
    {
        $query = $this->getEntityManager()
            ->createQuery('SELECT m, s, c, o FROM SocialLibraryReadBundleMangaBundle:Manga m
                    JOIN m.serie s
                    JOIN m.creators c
                    LEFT JOIN m.owners o
                    WHERE m.id = :id AND m.nameSlug = :nameSlug')
            ->setParameter('id', $id)
            ->setParameter('nameSlug', $nameSlug);
        
        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
